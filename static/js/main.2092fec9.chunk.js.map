{"version":3,"sources":["DBSimulator.js","APISimulator.js","components/GameCard.js","components/Games.js","content/me.png","components/Credits.js","components/HomePage.js","content/itchio.svg","components/Logo.js","components/StartPage.js","components/GameHead.js","components/GameInfo.js","components/GamePurchase.js","components/ListFromAccount.js","components/Account.js","components/MainHead.js","components/User.js","components/AlertPopup.js","components/Itchio.js","App.js","reportWebVitals.js","index.js"],"names":["gamesDB","users","userWishList","userPurchasedGames","checkUser","email","password","undefined","addUser","addToWishlist","game","price","type","checkGameOnWishlist","newPurchasedGame","checkGameOnPurchase","getUserAllData","api","requestsStack","requestsData","requestRoute","requestBody","callbackOnReponse","lastAPICallType","get","route","buildRequest","post","body","request","push","postRequestProcess","getRequestProcess","dataPost","dataGet","length","onRequestReponse","responseCallback","requestBuild","index","callback","requestRecieved","setTimeout","DBSimulator","games","filterRequestGetFromRoute","generateUniqueSessionID","console","log","filterRequestPostFromRoute","chars","split","Math","floor","random","str","i","GameCard","Card","onClick","props","cardClick","gameData","className","style","width","Img","variant","src","this","image","Body","Title","Component","Games","state","reference","APISimulator","data","setState","Container","Row","xs","md","map","element","Col","cardClicked","Credits","lg","me","Button","backClicked","HomePage","credits","itchio","Logo","classInput","LogoImage","includes","StartPage","startClicked","GameHead","gameInfo","cookies","Cookies","GameInfo","showWishButton","showPurchase","wishListClicked","bind","playClicked","checkGamePurchased","response","process","checkGameInWishList","alertMessage","window","open","link","description","purchaseClicked","logged","GamePurchase","selectedDate","Date","toSave","completePurchase","onCVVChange","onCardNumberChange","onDateChange","onSaveChange","CVV","cardNumber","savedCard","expireDate","dateS","getFullYear","getMonth","cardData","saveCardData","date","content","target","value","event","checked","Form","Group","controlId","Label","Control","defaultValue","onChange","placeholder","Text","as","selected","dateFormat","showMonthYearPicker","showFullMonthYearPicker","id","Check","label","ListFromAccount","ListGroup","Item","active","colorInt","listName","Object","keys","InputGroup","Prepend","Account","gamesPurchased","gamesWishlist","currentRender","showTypeExports","changeRender","exportType","showExports","renderToSet","ButtonGroup","aria-label","renderAccount","stringFile","finalJSON","JSON","stringify","purchase","wish","filename","contentType","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","a","document","createElement","download","href","encodeURIComponent","appendChild","click","removeChild","renderList","renderGraph","horizontal","typeGraph","selectedList","dataForGraph","keysForData","x","y","indexOf","dir","height","xType","color","MainHead","renderButtons","isLogged","size","account","logout","handleShowClick","User","tryLog","emailOnChange","passOnChange","callbackLog","text","Modal","show","showForm","onHide","closeForm","backdrop","keyboard","Header","closeButton","formName","autoComplete","Footer","AlertPopup","Alert","alertType","alertShow","onClose","alertClose","dismissible","Heading","headMessage","message","line","Itchio","captureJson","thisOBJ","fetch","then","XMLStr","itens","jsonConverter","xml2js","compact","spaces","rss","channel","item","title","linkClicked","App","showUserForm","namesForm","showAlert","alertMessageHead","isUserLogged","mainRender","handleShow","handleClose","userLogWithData","login","newAlertCall","accountClicked","creditsClicked","itchioClicked","logMenu","timerAlert","activeGame","savedCardSession","classList","add","renderUserForm","renderAlert","renderStartPage","renderHomePage","renderGameInfo","renderGamePurchase","renderCredits","renderItchio","newFormName","submitName","renderMainHead","remove","replaceAll","session","set","messageHead","clearTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2092fec9.chunk.js","sourcesContent":["var gamesDB ={};\r\n\r\ngamesDB.games = [   \r\n                    {\"game\": \"Sleepless\", \"type\": \"Terror\", \"price\" : \"50$\", \"link\": \"https://nutto.itch.io/sleepless\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ1NzIyMTYuZ2lm/original/ZkhK4U.gif\",\r\n                     \"description\": \"The game is inspired by the terrifying tales all around the world  that describe sleep paralysis even before the phenomenon was diagnosed.\"},\r\n                     {\"game\": \"Monster Girl Maker\", \"type\": \"SIM\", \"price\" : \"30$\", \"link\": \"https://ghoulkiss.itch.io/monster-girl-maker\",\r\n                     \"image\":  \"https://img.itch.zone/aW1hZ2UvMjc5NDEzLzEzNTYxMDguZ2lm/original/60xArw.gif\",\r\n                     \"description\": \"Ever wanted to create your own cute monster character but didn't know where to start? Lost on what aesthetics they should have, what face details or hairstyle they could wear? Well, Monster Girl Maker could help you with those worries!\"},\r\n                     {\"game\": \"3.5Deep\", \"type\": \"Terror\", \"price\" : \"10$\", \"link\": \"https://tntc-lab.itch.io/35deep\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ4NzA0NDcucG5n/315x250%23c/XTuOD3.png\",\r\n                     \"description\": \"Would you like to experience a feeling of playing a puzzle game in a horror game? Then you came in the right place! You live in an old Japanese house and after a long working day you come home. There is a strange game on your computer...  but who installed it?\"},\r\n                     {\"game\": \"Friday Night Funkin'\", \"type\": \"Rythm\", \"price\" : \"12$\", \"link\": \"https://ninja-muffin24.itch.io/funkin\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ1MjMxODcuZ2lm/original/5%2BUV5L.gif\",\r\n                     \"description\": \"Uh oh! Your tryin to kiss ur hot girlfriend, but her MEAN and EVIL dad is trying to KILL you! He's an ex-rockstar, the only way to get to his heart? The power of music...\"},\r\n                     {\"game\": \"Opossum Country\", \"type\": \"Terror\", \"price\" : \"45$\", \"link\": \"https://benjelter.itch.io/opossum-country\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ3OTQxNzYuZ2lm/original/rsKsF9.gif\",\r\n                     \"description\": \"A story-driven horror game for Game Boy. Investigate a suspicious trailer park and uncover its secret horrors.\"},\r\n                     {\"game\": \"Three Lesbians in a Winter Special\", \"type\": \"SIM\", \"price\" : \"1$\", \"link\": \"https://digital-poppy.itch.io/lesbian-winter\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ5MDI0OTYucG5n/315x250%23c/2%2BCKsZ.png\",\r\n                     \"description\": \"'Three Lesbians in a Winter Special' is a short bitsy sequel to the visual novels 'The Testimony of Trixie Glimmer Smith' and 'Three Lesbians in a Barrow' (but this story is stand-alone and contain *very* minimal 'spoilers' if you haven't played the previous games!)\"},\r\n                     {\"game\": \"Kissa\", \"type\": \"Novel\", \"price\" : \"50$\", \"link\": \"https://kultisti.itch.io/kissa\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzQ4MzY3MzMuZ2lm/original/UTpk%2Fl.gif\",\r\n                     \"description\": \"It's time to find food for our kitty companion in this charming, pixelated adventure.\"},\r\n                     {\"game\": \"Cell Machine\", \"type\": \"Novel\", \"price\" : \"25$\", \"link\": \"https://samhogan.itch.io/cell-machine\",\r\n                     \"image\":  \"https://img.itch.zone/aW1nLzM4NDMyMjkucG5n/315x250%23c/oTR83j.png\",\r\n                     \"description\": \"The game is based on cellular automata like Conway's Game of Life. Atoms, molecules, cells - do they behave deterministically? And if they do, does combining them together change that?\"}\r\n                ];\r\n\r\nvar users = {\r\n    \"marco@mail.com\": \"marco123\"\r\n}\r\n\r\nvar userWishList = {\r\n    \"marco@mail.com\": {}\r\n}\r\n\r\nvar userPurchasedGames = {\r\n    \"marco@mail.com\": {}\r\n}\r\n\r\ngamesDB.checkUser = function(email, password){\r\n    if(users[email] !== undefined && users[email] !== null &&\r\n         users[email] === password){\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\ngamesDB.addUser = function(email, password){\r\n    \r\n    if(users[email] === undefined || users[email] === null){\r\n           users[email] = password; \r\n           userWishList[email] = {};\r\n           userPurchasedGames[email] ={};\r\n           return true;\r\n   }\r\n   return false;\r\n}\r\n\r\ngamesDB.addToWishlist = function(email, game, price, type){\r\n    if(userWishList[email] != undefined && userWishList[email] != null &&\r\n        (userWishList[email][game] == undefined || userWishList[email][game] == null)){\r\n            userWishList[email][game] = {price: price, type: type};\r\n            return true;\r\n    }else{\r\n            return false;\r\n    }\r\n}\r\n\r\ngamesDB.checkGameOnWishlist = function(email, game){\r\n    if(userWishList[email] != undefined && userWishList[email] != null &&\r\n        (userWishList[email][game] != undefined && userWishList[email][game] != null)){\r\n            return true;\r\n    }else{\r\n            return false;\r\n    }\r\n}\r\n\r\ngamesDB.newPurchasedGame = function(email, game, price, type){\r\n    if(userPurchasedGames[email] != undefined && userPurchasedGames[email] != null &&\r\n        (userPurchasedGames[email][game] == undefined || userPurchasedGames[email][game] == null)){\r\n            userPurchasedGames[email][game] = {price: price, type: type};\r\n            delete userWishList[email][game];\r\n            return true;\r\n    }else{\r\n            return false;\r\n    }\r\n}\r\n\r\ngamesDB.checkGameOnPurchase = function(email, game){\r\n    if(userPurchasedGames[email] != undefined && userPurchasedGames[email] != null &&\r\n        (userPurchasedGames[email][game] != undefined && userPurchasedGames[email][game] != null)){\r\n            return true;\r\n    }else{\r\n            return false;\r\n    }\r\n}\r\n\r\ngamesDB.getUserAllData = function(email){\r\n    return {\r\n        \"gamesPurchased\": userPurchasedGames[email],\r\n        \"gamesWishlist\": userWishList[email]\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default gamesDB;","import DBSimulator from './DBSimulator.js';\r\n\r\nvar api = {};\r\nvar requestsStack = [];\r\nvar requestsData = [];\r\n\r\nvar requestRoute = null;\r\nvar requestBody = null;\r\nvar callbackOnReponse = null;\r\nvar lastAPICallType = \"\";\r\n\r\napi.get = function(route){\r\n    requestRoute = route;\r\n    callbackOnReponse = null;\r\n    lastAPICallType = \"GET\";\r\n    \r\n    return buildRequest();\r\n}\r\n\r\napi.post = function(route, body){\r\n    requestRoute = route;\r\n    requestBody = body;\r\n    callbackOnReponse = null;\r\n    lastAPICallType = \"POST\";\r\n\r\n    return buildRequest();\r\n}\r\n\r\nvar request = function(){\r\n    requestsStack.push((lastAPICallType==\"POST\") ? postRequestProcess: getRequestProcess);\r\n    \r\n    var dataPost = {\r\n        \"route\"     : requestRoute,\r\n        \"body\"      : requestBody,\r\n        \"callback\"  : callbackOnReponse\r\n    };\r\n    \r\n    var dataGet = {\r\n        \"route\"     : requestRoute,\r\n        \"body\"      : requestBody\r\n    };\r\n\r\n    requestsData.push((lastAPICallType==\"POST\") ? dataPost: dataGet);\r\n    requestsStack[requestsStack.length-1](requestsStack.length-1);\r\n\r\n    return buildRequest();\r\n}\r\n\r\nvar onRequestReponse = function(responseCallback){  \r\n    callbackOnReponse = responseCallback;\r\n    requestsData[requestsData.length-1] = {\r\n        \"route\"     : requestsData[requestsData.length-1].route,\r\n        \"body\"      : requestsData[requestsData.length-1].body,\r\n        \"callback\"  : callbackOnReponse\r\n    }\r\n\r\n    return buildRequest();\r\n}\r\n\r\nfunction buildRequest(){\r\n    var requestBuild = {};\r\n\r\n    requestBuild.request = request; \r\n    requestBuild.onRequestReponse = onRequestReponse;\r\n\r\n    return requestBuild; \r\n}\r\n\r\n\r\nfunction postRequestProcess(index){\r\n    if(typeof requestsData[index].callback === 'function'){\r\n        requestRecieved(index, requestsData[index].route, \"POST\", requestsData[index].body);\r\n    }else{\r\n        setTimeout(()=>{\r\n            requestsStack[index](index);\r\n        }, 1);\r\n    }\r\n}\r\n\r\nfunction getRequestProcess(index){\r\n    if(typeof requestsData[index].callback === 'function'){\r\n        requestRecieved(index ,requestsData[index].route, \"GET\");\r\n    }else{\r\n        setTimeout(()=>{\r\n            requestsStack[index](index);\r\n        }, 1);\r\n    }\r\n}\r\n\r\nfunction requestRecieved(index, route, type, body){\r\n    switch(type){\r\n        case \"GET\":\r\n            filterRequestGetFromRoute(route, index);\r\n            break;\r\n        case \"POST\":\r\n            filterRequestPostFromRoute(route, body, index);\r\n            break;\r\n    }\r\n}\r\n\r\nfunction filterRequestGetFromRoute(route, index){\r\n    switch(route){\r\n        case \"/games\":\r\n            requestsData[index].callback({\r\n               \"games\": DBSimulator.games\r\n            });\r\n            break;\r\n    }\r\n}\r\n\r\nfunction filterRequestPostFromRoute(route, body, index){\r\n    switch(route){\r\n        case \"/login\":\r\n            if(DBSimulator.checkUser(body.email, body.password)){\r\n                requestsData[index].callback({\r\n                    \"session\": generateUniqueSessionID(5)\r\n                });\r\n            }else{\r\n                requestsData[index].callback({\r\n                    \"session\": \"!\"\r\n                });\r\n            }\r\n            break;\r\n        case \"/sign\":\r\n            if(DBSimulator.addUser(body.email, body.password)){\r\n                console.log(\"email : \" + body.email + \" pass : \" + body.password);\r\n                requestsData[index].callback({\r\n                    \"session\" :  generateUniqueSessionID(5)\r\n                });\r\n            }else{\r\n                requestsData[index].callback({\r\n                    \"session\" : \"!\"\r\n                });\r\n            }\r\n            break;\r\n        case \"/addtowishlist\":\r\n            if(DBSimulator.addToWishlist(body.email, body.game, body.price, body.type)){\r\n                requestsData[index].callback({\r\n                    \"process\" : true\r\n                });\r\n            }else{\r\n                requestsData[index].callback({\r\n                    \"process\" : false\r\n                });\r\n            }\r\n            break;\r\n        case \"/havewishlistgame\":\r\n            if(DBSimulator.checkGameOnWishlist(body.email, body.game)){\r\n                requestsData[index].callback({\r\n                    \"process\" : true\r\n                });\r\n            }else{\r\n                requestsData[index].callback({\r\n                    \"process\" : false\r\n                });\r\n            }\r\n            break;\r\n        case \"/purchased\":\r\n            if(DBSimulator.newPurchasedGame(body.email, body.game, body.price, body.type)){\r\n                requestsData[index].callback({\r\n                    \"process\" : true\r\n                });\r\n            }else{\r\n                requestsData[index].callback({\r\n                    \"process\" : false\r\n                });\r\n            }\r\n            break;\r\n        case \"/havepurchased\":\r\n                if(DBSimulator.checkGameOnPurchase(body.email, body.game)){\r\n                    requestsData[index].callback({\r\n                        \"process\" : true\r\n                    });\r\n                }else{\r\n                    requestsData[index].callback({\r\n                        \"process\" : false\r\n                    });\r\n                }\r\n                break;\r\n        case \"/user\":\r\n            requestsData[index].callback(\r\n                DBSimulator.getUserAllData(body.email)\r\n            );\r\n    }\r\n}\r\n\r\n\r\nfunction generateUniqueSessionID(length) {\r\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n    if (! length) {\r\n        length = Math.floor(Math.random() * chars.length);\r\n    }\r\n\r\n    var str = '';\r\n    for (var i = 0; i < length; i++) {\r\n        str += chars[Math.floor(Math.random() * chars.length)];\r\n    }\r\n\r\n    console.log(\"New Session ID : \" + str);\r\n    return str;\r\n}\r\n\r\n\r\n\r\n\r\nexport default api;","import React, { Component } from 'react'\r\nimport {Button, Card} from 'react-bootstrap';\r\n\r\nexport class GameCard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card onClick={()=>this.props.cardClick(this.props.gameData)} className=\"game-card\" style={{ width: '8rem' }}>\r\n                <Card.Img variant=\"top\" src={this.props.gameData.image} />\r\n                <Card.Body>\r\n                    <Card.Title>{this.props.gameData.game}</Card.Title>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameCard\r\n","import React, { Component } from 'react';\r\nimport {Button, Col, Container, Row} from 'react-bootstrap';\r\n\r\nimport APISimulator from '../APISimulator.js';\r\nimport GameCard from './GameCard';\r\n\r\nexport class Games extends Component {\r\n   \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             games : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        var reference = this;\r\n        APISimulator.get(\"/games\").request().onRequestReponse((data)=>{\r\n            reference.setState({\r\n                games: data.games\r\n            }); \r\n        });\r\n       \r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"parent-games-container\">\r\n                <Container className=\"games-container\">\r\n                    <Row  xs={1} md={4}>\r\n                        {this.state.games.map((element, index) => {\r\n                            return (\r\n                                        <Col key={index}>\r\n                                            <GameCard gameData={element} cardClick={ this.props.cardClicked}></GameCard>\r\n                                        </Col>\r\n                                    )\r\n                            \r\n                        })}\r\n                    </Row>\r\n                </Container>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games\r\n","export default __webpack_public_path__ + \"static/media/me.ab69aa25.png\";","import React, { Component } from 'react'\r\nimport me from '../content/me.png';\r\nimport {Button, Container, Row, Col} from 'react-bootstrap';\r\nexport class Credits extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col xs lg=\"3\">\r\n                    <img className=\"img-portfolio\" src={me}></img>\r\n                    </Col>\r\n                    <Col xs md=\"auto\">\r\n                        <div  className=\"title-portfolio\">\r\n                            <h1>Marco Fernandes</h1>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"auto\">\r\n                        <Button onClick={()=>this.props.backClicked()} className=\"back-portfolio style-btn-custom-2\">\r\n                            Back\r\n                        </Button>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                    <Col lg=\"2\">\r\n\r\n                    </Col>\r\n                    <Col md=\"auto\">\r\n                        <div className=\"description-portfolio\">\r\n                            This project is only using React as the main framework.\r\n                            <br></br>\r\n                            Its using Bootstrap, DataTimePicker, MDBReact, Universal-Cookie and XML Parser as supporting libs.\r\n                            <br></br>\r\n                            NGinx and Docker is used to publish on my own machine.\r\n                            <br></br>\r\n                            For the cloud version i'll be publishing it on github.\r\n                            <br></br>\r\n                            The project is using a simulation for its rest api, so it won't save any of the data for each session.\r\n                            <br></br>\r\n                            It will only be making a rest call for itch.io api for prof of concept for academic reasons.\r\n                        </div>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Credits\r\n","import React, { Component } from 'react';\r\nimport Games from './Games.js';\r\nimport Credits from './Credits';\r\n\r\nexport class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Games cardClicked={this.props.cardClicked}></Games>\r\n                <div>\r\n                    <a onClick={()=>this.props.credits()} className=\"credits\">Credits</a>\r\n                </div>\r\n                <div>\r\n                    <a onClick={()=>this.props.itchio()} className=\"itchio-call\">\r\n                        Itchio API \r\n                    </a>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage\r\n","export default __webpack_public_path__ + \"static/media/itchio.091916ec.svg\";","import React, { Component } from 'react';\r\nimport LogoImage from '../content/itchio.svg'\r\n\r\nexport class Logo extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"logo-anim-container\">\r\n                <img className={this.props.classInput} src={LogoImage}></img>\r\n                {\r\n                    (this.props.classInput.includes(\"start\"))?(\r\n                        <>\r\n                            <div className=\"logo-anim-1\"></div>\r\n                            <div className=\"logo-anim-2\"></div>\r\n                            <div className=\"logo-anim-3\"></div>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                        </>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logo\r\n","import React, { Component } from 'react'\r\nimport Logo from './Logo';\r\nimport {Button, Col, Container, Row} from 'react-bootstrap';\r\n\r\nexport class StartPage extends Component {\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div className=\"content-centered\">\r\n               <div>\r\n                    <Logo classInput=\"logo-start\"></Logo>\r\n                    <Button className=\"style-btn-custom-1\" onClick={()=>this.props.startClicked()}>\r\n                        Start\r\n                    </Button>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default StartPage\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nexport class GameHead extends Component {\r\n    render() {\r\n        return (\r\n            <Row xs={1} md={2}>\r\n                <Col>\r\n                    <h2 className=\"align-info2\">\r\n                        {this.props.gameInfo.game}\r\n                    </h2>\r\n                </Col>\r\n                <Col className=\"round-wrap-container\">\r\n                    <img className=\"round-wrap\" src={this.props.gameInfo.image}></img>\r\n                    <div onClick={()=>this.props.backClicked()} className=\"round-wrap-overlay\">\r\n                        <div>Back</div>\r\n                    </div>\r\n                    <div>\r\n                        {this.props.gameInfo.price}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameHead\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport GameHead from './GameHead.js';\r\nimport api from '../APISimulator.js';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nexport class GameInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             showWishButton: true,\r\n             showPurchase: true\r\n        }\r\n\r\n        this.wishListClicked = this.wishListClicked.bind(this);\r\n        this.playClicked = this.playClicked.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var email = cookies.get('user');\r\n        if(email){\r\n            this.checkGamePurchased(email);\r\n        }else{\r\n            this.setState({\r\n                showWishButton: false,\r\n                showPurchase: false\r\n            });\r\n        }\r\n    }\r\n\r\n    checkGamePurchased(email){\r\n        api.post('/havepurchased', \r\n        {'email': email, \"game\": this.props.gameInfo.game}).\r\n        request().\r\n        onRequestReponse((response)=>{\r\n            if(response.process){\r\n                this.setState({\r\n                    showWishButton: false,\r\n                    showPurchase: false\r\n                });\r\n            }else{\r\n                this.checkGameInWishList(email);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkGameInWishList(email){\r\n        api.post('/havewishlistgame',\r\n         {'email': email, \"game\": this.props.gameInfo.game}).\r\n         request().\r\n         onRequestReponse((response)=>{\r\n            if(response.process){\r\n                this.setState({\r\n                    showWishButton: false\r\n                });\r\n            }\r\n         });\r\n    }\r\n    \r\n    wishListClicked(){\r\n        var email = cookies.get('user');\r\n        api.post('/addtowishlist',\r\n         {\"email\": email, \"game\": this.props.gameInfo.game, \"price\": this.props.gameInfo.price,\r\n          \"type\": this.props.gameInfo.type}).\r\n        request().\r\n        onRequestReponse((response)=>{\r\n            if(response.process){\r\n                this.props.alertMessage(\"SUCCESS\", \"Game added to your wishlist!\", \"success\");\r\n                this.props.backClicked();\r\n            }else{\r\n                this.props.alertMessage(\"ERROR\", \"Game is already in your wishlist!\", \"danger\");\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    playClicked(){\r\n        window.open(this.props.gameInfo.link, this.props.gameInfo.game,'height=1000,width=1000');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-centered\">\r\n                    <Container className=\"game-info-container\">\r\n                        \r\n                            <GameHead backClicked={this.props.backClicked} gameInfo={this.props.gameInfo}></GameHead>\r\n                        <Row xs={1} md={2}>\r\n                            <Col>\r\n                                <p className=\"align-info\">\r\n                                   {this.props.gameInfo.description}\r\n                                </p>\r\n                            </Col>\r\n                            <Col>\r\n                                {\r\n                                    (this.state.showPurchase)?(\r\n                                        <div>\r\n                                            <Button onClick={()=>this.props.purchaseClicked(this.props.gameInfo)} className=\"style-btn-custom-1\">Purchase</Button>\r\n                                        </div>\r\n                                    ):(this.props.logged)?(\r\n                                        <Button onClick={()=>this.playClicked()} className=\"style-btn-custom-2\">Play</Button>\r\n                                    ):(\r\n                                       <></>\r\n                                    )\r\n                                }\r\n                                \r\n                                {\r\n                                    (this.state.showWishButton)?(\r\n                                        <div>\r\n                                            <Button onClick={()=>this.wishListClicked()} className=\"style-btn-custom-2\">Wish List</Button>\r\n                                        </div>\r\n                                    ):(\r\n                                        <></>\r\n                                    )\r\n                                }\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameInfo\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport GameHead from './GameHead.js';\r\nimport DatePicker from \"react-datepicker\";\r\nimport api from '../APISimulator.js';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport class GamePurchase extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            selectedDate: new Date(),\r\n            toSave: false\r\n        }\r\n\r\n        this.completePurchase = this.completePurchase.bind(this);\r\n        this.onCVVChange = this.onCVVChange.bind(this);\r\n        this.onCardNumberChange = this.onCardNumberChange.bind(this);\r\n        this.onDateChange = this.onDateChange.bind(this);\r\n        this.onSaveChange = this.onSaveChange.bind(this);\r\n\r\n        this.CVV = \"\";\r\n        this.cardNumber = \"\";\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.savedCard != null){\r\n            this.CVV = this.props.savedCard.CVV;\r\n            this.cardNumber = this.props.savedCard.cardNumber;\r\n            this.setState({\r\n                toSave: true,\r\n                selectedDate: this.props.savedCard.expireDate\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    completePurchase(){\r\n        var email = cookies.get('user');\r\n        var dateS = this.state.selectedDate;\r\n        \r\n        if(this.cardNumber.length == 16){\r\n            if(this.CVV.length == 3 || this.CVV.length == 4){\r\n                if( dateS.getFullYear() > new Date().getFullYear() ||\r\n                     ( dateS.getFullYear() == new Date().getFullYear()&&\r\n                        dateS.getMonth() >= new Date().getMonth())){\r\n                        api.post('/purchased', \r\n                            {\"email\": email, \"game\": this.props.gameData.game, \"price\": this.props.gameData.price, \r\n                            \"type\": this.props.gameData.type}).\r\n                            request().\r\n                            onRequestReponse((response)=>{\r\n                                if(response.process){\r\n                                    this.props.alertMessage(\"SUCCESS\", \"Thanks for buying our game!\", \"success\");\r\n                                    if(this.props.logged && this.state.toSave){\r\n                                        const cardData = {\r\n                                            \"cardNumber\": this.cardNumber,\r\n                                            \"CVV\": this.CVV,\r\n                                            \"expireDate\": dateS,\r\n                                        }\r\n                                        this.props.saveCardData(cardData);\r\n                                    }\r\n                                    this.props.backClicked();\r\n                                }else{\r\n                                    this.props.alertMessage(\"ERROR\", \"Game is already purchased!\", \"danger\");\r\n                                }\r\n                            });\r\n                }else{\r\n                    this.props.alertMessage(\"WARNING\", \"Date is set before of the actual date\", \"warning\");\r\n                }\r\n            }else{\r\n                this.props.alertMessage(\"WARNING\", \"CVV is not valid\", \"warning\");\r\n            }\r\n        }else{\r\n            this.props.alertMessage(\"WARNING\", \"Card number not valid\", \"warning\");\r\n        }\r\n    }\r\n\r\n\r\n    onDateChange(date){\r\n        this.setState({\r\n            selectedDate : date\r\n        });\r\n    }\r\n\r\n    onCVVChange(content){\r\n        this.CVV= content.target.value;\r\n    }\r\n\r\n    onCardNumberChange(content){\r\n        this.cardNumber = content.target.value;\r\n    }\r\n\r\n    onSaveChange(event){\r\n        this.setState({\r\n            toSave: event.target.checked\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-centered\">\r\n                    <Container className=\"game-info-container\">\r\n                        \r\n                        <GameHead backClicked={this.props.backClicked} gameInfo={this.props.gameData}></GameHead>\r\n                        <Row >\r\n                            <Col>\r\n                                <Form className=\"round-wrap\">\r\n                                    <Form.Group controlId=\"formCardNumber\">\r\n                                        <Form.Label>Card Number</Form.Label>\r\n                                        <Form.Control defaultValue={this.cardNumber} onChange={(content)=>this.onCardNumberChange(content)} type=\"number\" placeholder=\"Enter card number\" />\r\n                                        <Form.Text className=\"text-muted\">\r\n                                        We'll never share your card number with anyone else.\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} controlId=\"formExpireDate\">\r\n                                            <Form.Label>Expire Date</Form.Label>\r\n                                            <br></br>\r\n                                            <DatePicker onChange={(date)=>this.onDateChange(date)} className=\"form-control\" selected={this.state.selectedDate} dateFormat=\"MM/yyyy\" showMonthYearPicker showFullMonthYearPicker/>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} controlId=\"formGridCVV\">\r\n                                            <Form.Label id=\"formGridCVVLabel\">CVV</Form.Label>\r\n                                            <Form.Control defaultValue={this.CVV} onChange={(content)=>this.onCVVChange(content)} type=\"number\" placeholder=\"CVV\" />\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    \r\n                                    <Form.Group controlId=\"formBasicCheckbox\">\r\n                                        <Form.Check checked={this.state.toSave}\r\n                                          onChange={this.onSaveChange}\r\n                                          type=\"checkbox\" label=\"Save Card For Session\" />\r\n                                    </Form.Group>\r\n                                    <Button className=\"style-btn-custom-2\" onClick={()=>this.completePurchase()} variant=\"primary\" type=\"button\">\r\n                                        Pay\r\n                                    </Button>\r\n                                </Form> \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamePurchase\r\n","import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nexport class ListFromAccount extends Component {\r\n    render() {\r\n        return (\r\n                <ListGroup as=\"ul\">\r\n\r\n                    <ListGroup.Item as=\"li\" active className={\"sticky-title-account style-btn-custom-\"+this.props.colorInt}>\r\n                        {this.props.listName}\r\n                    </ListGroup.Item>\r\n                    <br></br>\r\n\r\n                    <ListGroup.Item as=\"li\" className=\"overflow-list-account scrollbar\">\r\n                        {Object.keys(this.props.content).map((element)=>{\r\n                                return(\r\n                                        <InputGroup key={element} className=\"mb-3\">\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text className=\"name-fixed-width-account\">\r\n                                                    {element}\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text className=\"price-fixed-width-account\">\r\n                                                    {this.props.content[element].price}\r\n                                                </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                        </InputGroup>\r\n                                )\r\n                        })}\r\n                    </ListGroup.Item>\r\n                   \r\n                </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListFromAccount\r\n","import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {ButtonGroup, Button, Row, Col, Container} from 'react-bootstrap';\r\nimport ListFromAccount from './ListFromAccount';\r\nimport api from '../APISimulator.js';\r\nimport {XYPlot, LineSeries, VerticalGridLines, VerticalBarSeries, HorizontalGridLines, XAxis, YAxis, MarkSeries} from 'react-vis';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport class Account extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             gamesPurchased: {},\r\n             gamesWishlist: {},\r\n             currentRender: \"list\",\r\n             showTypeExports: false \r\n        }\r\n\r\n        this.changeRender = this.changeRender.bind(this);\r\n        this.exportType = this.exportType.bind(this);\r\n        this.showExports = this.showExports.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var email = cookies.get('user');\r\n        api.post('/user', {\"email\": email}).\r\n        request().\r\n        onRequestReponse((response)=>{\r\n            this.setState({\r\n                gamesPurchased: response.gamesPurchased,\r\n                gamesWishlist: response.gamesWishlist\r\n            });\r\n        });\r\n    }\r\n\r\n    changeRender(renderToSet){\r\n        this.setState({\r\n            currentRender: renderToSet\r\n        });\r\n    }\r\n\r\n    showExports(){\r\n        this.setState({\r\n            showTypeExports: !this.state.showTypeExports\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-centered container-account-back\">\r\n\r\n                <Container >\r\n                     {(this.state.showTypeExports)?(\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Basic example\">\r\n                                    <Button onClick={()=>this.exportType(\"xml\")} variant=\"primary\">\r\n                                        XML\r\n                                    </Button>\r\n                                    <Button onClick={()=>this.exportType(\"txt\")} variant=\"primary\">\r\n                                        TXT\r\n                                    </Button>\r\n                                    <Button onClick={()=>this.exportType(\"json\")} variant=\"primary\">\r\n                                        JSON\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                     ):(\"\")}\r\n                        \r\n                        <Row>\r\n                            <Col >\r\n                                <ButtonGroup aria-label=\"Basic example\">\r\n                                    <Button onClick={()=>this.changeRender(\"list\")} variant=\"secondary\">{\"List\"}</Button>\r\n                                    <Button onClick={()=>this.changeRender(\"graphP\")} variant=\"secondary\">Graph<br></br>Purchased</Button>\r\n                                    <Button onClick={()=>this.changeRender(\"graphW\")} variant=\"secondary\">Graph<br></br>Wish List</Button>\r\n                                    <Button onClick={()=>this.showExports()}variant=\"secondary\">{\"Export\"}</Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"content-not-main-center\">\r\n                                    <div onClick={()=>this.props.backClicked()} className=\"overlay-account-back\">\r\n                                            <div>Back</div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {this.renderAccount()}\r\n                        </Row>\r\n                    </Container>\r\n                </div>      \r\n            </div>\r\n        )\r\n    }\r\n\r\n    exportType(type){\r\n        this.setState({\r\n            showTypeExports: false\r\n        });\r\n\r\n        var stringFile = \"\";\r\n\r\n        if(type != \"xml\"){\r\n            var finalJSON = {gamesPurchased: this.state.gamesPurchased,\r\n            gamesWishlist: this.state.gamesPurchased}\r\n            stringFile = JSON.stringify(finalJSON);\r\n            \r\n        }else{\r\n            var purchase = this.state.gamesPurchased;\r\n            var wish = this.state.gamesWishlist;\r\n            stringFile = \"<YourAccount>\\n\";\r\n            for(const element in purchase){\r\n                stringFile += \"<game>\\n<name>\\n\" + element + \"\\n</name>\\n\";\r\n                stringFile += \"<price>\\n\" + purchase[element].price + \"\\n</price>\\n\";\r\n                stringFile += \"<type>\\n\" + purchase[element].type + \"\\n</type>\\n\";\r\n                stringFile += \"</game>\\n\";\r\n            }\r\n\r\n            for(const element in wish){\r\n                stringFile += \"<game>\\n<name>\\n\" + element + \"\\n</name>\\n\";\r\n                stringFile += \"<price>\\n\" + wish[element].price + \"\\n</price>\\n\";\r\n                stringFile += \"<type>\\n\" + wish[element].type + \"\\n</type>\\n\";\r\n                stringFile += \"<game>\\n\";\r\n            }\r\n\r\n            stringFile+=\"</YourAccount>\";\r\n        }\r\n\r\n        let filename = \"YourAccount.\"+type;\r\n        let contentType = \"text/\"+type+\";charset=utf-8,\";\r\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n            var blob = new Blob([decodeURIComponent(encodeURI(stringFile))], { type: contentType });\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        } else {\r\n            var a = document.createElement('a');\r\n            a.download = filename;\r\n            a.href = 'data:' + contentType + ',' + encodeURIComponent(stringFile);\r\n            a.target = '_blank';\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        }\r\n    }\r\n\r\n\r\n    renderAccount(){\r\n        switch(this.state.currentRender){\r\n            case \"list\":\r\n                return this.renderList();\r\n                break;\r\n            case \"graphP\":\r\n                return this.renderGraph(\"purchased\");\r\n            case \"graphW\":\r\n                return this.renderGraph(\"wish\");\r\n            default:\r\n                return this.renderList();\r\n        }\r\n\r\n    }\r\n\r\n    renderList(){\r\n        return(\r\n            <Col >\r\n                <div className=\"content-not-main-center\">\r\n                        <ListGroup horizontal>\r\n                                <ListGroup.Item>\r\n                                    <ListFromAccount colorInt=\"2\" listName=\"Purchased\" content={this.state.gamesPurchased}></ListFromAccount>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <ListFromAccount colorInt=\"1\" listName=\"Wish List\"content={this.state.gamesWishlist}></ListFromAccount>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                </div>                    \r\n             </Col>\r\n        )\r\n    }\r\n    \r\n    renderGraph(typeGraph){\r\n        const selectedList = (typeGraph == \"wish\")?\r\n         this.state.gamesWishlist : this.state.gamesPurchased;\r\n         \r\n        var dataForGraph = [];\r\n        var keysForData = {};\r\n\r\n         for(const element in selectedList){\r\n            \r\n           if(keysForData[selectedList[element].type] == undefined){\r\n            keysForData[selectedList[element].type] = 1;\r\n            dataForGraph.push({x :selectedList[element].type, y :1});\r\n           }else{\r\n             var index = Object.keys(keysForData).indexOf(selectedList[element].type);\r\n             console.dir(dataForGraph[index]);\r\n             console.log(\"Index: \" + index); \r\n             dataForGraph[index].y++;   \r\n           } \r\n         }\r\n\r\n        return(\r\n            <XYPlot height={500} width= {800} xType=\"ordinal\">\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries data={dataForGraph} color={(typeGraph == \"wish\")?\r\n                (\"#bd688e\"):(\"#F3CE5E\")}/>\r\n            </XYPlot> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Account\r\n","import React, { Component } from 'react'\r\nimport {Button, Col, Container, Row} from 'react-bootstrap';\r\nimport Logo from './Logo';\r\n\r\nexport class MainHead extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Logo classInput=\"logo-img\">\r\n                            </Logo>\r\n                        </Col>  \r\n                        {this.renderButtons()}\r\n                    </Row> \r\n                </Container>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    renderButtons(){\r\n        if(this.props.isLogged === true){\r\n            return(\r\n                <Col md=\"auto\">\r\n                    <Button className=\"style-btn-custom-2\" size=\"sm\"\r\n                     onClick={()=>this.props.account()}>\r\n                            Account\r\n                    </Button>\r\n                    {' '}\r\n                    <Button className=\"style-btn-custom-1\" size=\"sm\"\r\n                        onClick={this.props.logout}>\r\n                            Logout\r\n                        </Button>\r\n                </Col>\r\n            )\r\n        }else{\r\n            return(\r\n                <Col md=\"auto\">\r\n                    <Button className=\"style-btn-custom-2\" size=\"sm\"\r\n                        onClick={()=>this.props.handleShowClick(\"Sign Up\", \"Join Us\")} >\r\n                            Sign Up\r\n                    </Button>\r\n                    {' '}\r\n                    <Button className=\"style-btn-custom-1\" size=\"sm\"\r\n                        onClick={()=>this.props.handleShowClick(\"Login\", \"Get In\")}>\r\n                            Login\r\n                        </Button>\r\n                </Col>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainHead\r\n","import React, { Component } from 'react';\r\nimport {Modal, Button, Form} from 'react-bootstrap';\r\n\r\nexport class User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n        this.tryLog = this.tryLog.bind(this);\r\n        this.emailOnChange = this.emailOnChange.bind(this);\r\n        this.passOnChange = this.passOnChange.bind(this);\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n        \r\n    }\r\n    \r\n    tryLog(){\r\n        this.props.callbackLog({\"email\" : this.email, \"password\" : this.password});\r\n    }\r\n\r\n    emailOnChange(text){\r\n\r\n        this.email = text.target.value;\r\n    }\r\n\r\n    passOnChange(text){\r\n\r\n        this.password = text.target.value;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal show={this.props.showForm} onHide={this.props.closeForm} backdrop=\"static\" keyboard={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.props.formName[0]}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <Form >\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control onChange={this.emailOnChange}\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control autoComplete=\"new-password\" \r\n                            onChange={this.passOnChange} \r\n                            type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button className=\"style-btn-custom-2\" onClick={this.tryLog} variant=\"primary\" type=\"submit\">\r\n                            {this.props.formName[1]}\r\n                        </Button>\r\n                        <Button className=\"style-btn-custom-1\" variant=\"secondary\" onClick={this.props.closeForm}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\n\r\nexport class AlertPopup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Alert variant={this.props.alertType} show={this.props.alertShow}\r\n                onClose={this.props.alertClose} dismissible>\r\n                    <Alert.Heading>{this.props.headMessage}</Alert.Heading>\r\n                    <div>\r\n                        {this.props.message.split('\\n').map((line,index)=>{\r\n                            return <p key={index}>{line}</p>\r\n                        })}\r\n                    </div>\r\n                    \r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlertPopup\r\n","import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport jsonConverter from 'xml-js';\r\nimport {ButtonGroup, Button, Row, Col, Container} from 'react-bootstrap';\r\n\r\n\r\nexport class Itchio extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             games: []\r\n        }\r\n\r\n        this.captureJson = this.captureJson.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var thisOBJ = this;\r\n        fetch('https://itch.io/games/html5.xml').\r\n        then(response=>response.text()).\r\n        then(str=>thisOBJ.captureJson(str));\r\n    }\r\n    \r\n    captureJson(XMLStr){\r\n        var jsonxml = jsonConverter.xml2js(XMLStr, {compact: true, spaces: 4});\r\n        var itens = jsonxml.rss.channel.item;\r\n        for(const index in itens){\r\n            console.log(JSON.stringify(itens[index]));\r\n        }\r\n        this.setState({\r\n            games: itens\r\n        });\r\n      }\r\n\r\n      linkClicked(link){\r\n          window.open(link)\r\n      }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"content-centered container-account-back\">\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"content-not-main-center\">\r\n                                    <div onClick={()=>this.props.backClicked()} className=\"overlay-account-back\">\r\n                                        <div>Back</div>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"content-not-main-center\">\r\n                                    <ListGroup horizontal>\r\n                                        <ListGroup.Item>\r\n                                            <ListGroup as=\"ul\">\r\n                                                <ListGroup.Item as=\"li\" active className={\"sticky-title-account style-btn-custom-1\"}>\r\n                                                    Games Called from Itchio API\r\n                                                </ListGroup.Item>\r\n                                                <br></br>\r\n\r\n                                                <ListGroup.Item as=\"li\" className=\"overflow-list-account scrollbar\">\r\n                                                    {this.state.games.map((element, index)=>{\r\n                                                            if(index >= 10){\r\n                                                                return(\r\n                                                                    <InputGroup className=\"mb-1\">\r\n                                                                        <InputGroup.Prepend>\r\n                                                                            <InputGroup.Text className=\"name-fixed-width-account\">\r\n                                                                                <div className={\"itchio-text-weight \" + ((index%2==0)?(\"style-text-custom-1\")\r\n                                                                                :(\"style-text-custom-2\"))}>\r\n                                                                                    {element.title[\"_text\"]}\r\n                                                                                </div>\r\n                                                                            </InputGroup.Text>\r\n                                                                        </InputGroup.Prepend>\r\n                                                                        <InputGroup.Prepend>\r\n                                                                            <InputGroup.Text className=\"price-fixed-width-account\">\r\n                                                                                <a onClick={()=>this.linkClicked(element.link[\"_text\"])}\r\n                                                                                className={(index%2==0)?(\"style-text-custom-2\"):(\"style-text-custom-1\")}>\r\n                                                                                    link\r\n                                                                                </a>\r\n                                                                            </InputGroup.Text>\r\n                                                                        </InputGroup.Prepend>\r\n                                                                    </InputGroup>\r\n                                                                )\r\n                                                            }\r\n                                                            \r\n                                                    })}\r\n                                                </ListGroup.Item>\r\n\r\n                                                </ListGroup>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Itchio\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './css/scrollbar.css';\nimport './css/logo.css'\n\nimport React, { Component } from 'react';\nimport HomePage from './components/HomePage.js';\nimport StartPage from './components/StartPage';\nimport GameInfo from './components/GameInfo.js';\nimport GamePurchase from './components/GamePurchase.js';\nimport Account from './components/Account.js';\nimport MainHead from './components/MainHead.js';\nimport User from './components/User';\nimport AlertPopup from './components/AlertPopup.js';\nimport api from './APISimulator.js';\nimport Itchio from './components/Itchio.js'\nimport Credits from './components/Credits';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       showUserForm : false,\n       namesForm : [],\n       showAlert : false,\n       alertMessageHead : \"\",\n       alertMessage : \"\",\n       alertType : \"danger\",\n       isUserLogged : false,\n       mainRender : \"start\"\n    }\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.userLogWithData = this.userLogWithData.bind(this); \n    this.alertClose = this.alertClose.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.startClicked = this.startClicked.bind(this);\n    this.cardClicked = this.cardClicked.bind(this);\n    this.backClicked = this.backClicked.bind(this);\n    this.newAlertCall = this.newAlertCall.bind(this);\n    this.purchaseClicked = this.purchaseClicked.bind(this);\n    this.accountClicked = this.accountClicked.bind(this);\n    this.creditsClicked = this.creditsClicked.bind(this);\n    this.itchioClicked = this.itchioClicked.bind(this);\n    this.saveCardData = this.saveCardData.bind(this);\n\n    this.logMenu = \"\";\n    this.timerAlert = null;\n    this.activeGame = null;\n    this.savedCardSession = null;\n  }\n\n  componentWillMount(){\n    document.body.classList.add(\"fake-body\");\n  }\n\n  componentDidMount(){\n    var email = cookies.get('user');\n        if(email){\n          this.savedCardSession = null;\n          this.setState({\n            isUserLogged: true\n          });\n        }\n    \n  }\n\n  \n\n  render() {\n    return (\n      <div>\n        {this.renderUserForm()}\n        {this.mainRender()}\n        {this.renderAlert()}\n      </div>\n    )\n  }\n\n  mainRender(){\n    switch(this.state.mainRender){\n      case \"start\":\n        return this.renderStartPage();\n      case \"home\":\n        return this.renderHomePage();\n      case \"gameInfo\":\n        return this.renderGameInfo();\n      case \"purchase\":\n        return this.renderGamePurchase();\n      case \"account\":\n        return this.renderAccount();\n      case \"credits\":\n        return this.renderCredits();\n      case \"itchio\":\n        return this.renderItchio();\n      default:\n        return this.renderStartPage();\n    }\n  }\n\n  saveCardData(cardData){\n    this.savedCardSession = cardData;\n  }\n\n  handleShow(newFormName, submitName){\n    this.logMenu = newFormName;\n    this.setState({\n      showUserForm: true,\n      namesForm: [newFormName, submitName]\n    });\n  }\n\n  handleClose(){\n    this.setState({\n      showUserForm: false\n    });\n  }\n\n  renderMainHead(){\n    return(\n      <MainHead handleShowClick= {this.handleShow} \n      logout = {this.logout}\n      isLogged={this.state.isUserLogged}\n      account={this.accountClicked}>\n      </MainHead>\n    )\n  }\n\n  renderItchio(){\n    return(\n      <div>\n        {this.renderMainHead()}\n        <Itchio backClicked={this.backClicked}></Itchio>\n      </div>\n    );\n  }\n\n  renderCredits(){\n    return(\n      <Credits backClicked={this.backClicked}></Credits>\n    );\n  }\n\n  renderHomePage(){\n    return(\n      <div>\n        {this.renderMainHead()}\n        <HomePage credits={this.creditsClicked}\n         backClicked={this.backClicked}\n         cardClicked = {this.cardClicked}\n         itchio={this.itchioClicked}></HomePage>\n      </div>\n    );\n  }\n\n  renderStartPage(){\n    return(\n      <StartPage startClicked={this.startClicked}></StartPage> \n    )\n  }\n\n  renderGameInfo(){\n    return(\n      <div>\n        {this.renderMainHead()}\n        <GameInfo\n          logged={this.state.isUserLogged} \n          purchaseClicked={this.purchaseClicked}\n          alertMessage={this.newAlertCall} \n          backClicked={this.backClicked} \n          gameInfo={this.activeGame}></GameInfo>\n      </div>\n    )\n    \n  }\n\n  renderGamePurchase(){\n    return(\n      <div>\n          {this.renderMainHead()}\n          <GamePurchase savedCard={this.savedCardSession} \n           saveCardData={this.saveCardData}\n           logged={this.state.isUserLogged}\n           gameData={this.activeGame} alertMessage={this.newAlertCall}\n           backClicked={this.backClicked}></GamePurchase>\n      </div>\n    )\n  }\n\n  renderAccount(){\n    return(\n      <div>\n        {this.renderMainHead()}\n        <Account backClicked={this.backClicked}></Account>\n      </div>\n    )\n  }\n\n  renderUserForm(){\n    return(\n      <User formName={this.state.namesForm}\n       showForm = {this.state.showUserForm}\n       closeForm = {this.handleClose}\n       callbackLog = {this.userLogWithData}\n       ></User>\n    )\n  }\n\n  renderAlert(){\n    return(\n      <AlertPopup alertShow = {this.state.showAlert} \n      message={this.state.alertMessage}\n      headMessage={this.state.alertMessageHead}\n      alertClose = {this.alertClose}\n      alertType={this.state.alertType}></AlertPopup>\n    )\n  }\n\n  logout(){\n    cookies.remove(\"session\");\n    cookies.remove(\"user\");\n    this.savedCardSession = null;\n    this.setState({isUserLogged : false});\n    this.newAlertCall(\"SUCCESS\", \"You have logged out!\", \"success\");\n    this.backClicked();\n  }\n\n  login(message){\n    this.savedCardSession = null;\n    this.setState({isUserLogged : true});\n    this.newAlertCall(\"SUCCESS\", message, \"success\");\n    this.backClicked();\n  }\n\n  userLogWithData(data){\n    if(data.email.includes('@') && data.email.includes('.') &&\n     data.password.replaceAll(' ', '').length > 0){\n      if(this.logMenu === \"Login\"){\n        var email = data.email;\n        api.post('/login',{\"email\" : email, \"password\" : data.password}).\n        request().\n        onRequestReponse((data)=>{\n          \n          if(data.session !== \"!\"){\n            cookies.set(\"session\", data.session);\n            cookies.set(\"user\", email);\n            this.handleClose();\n            this.login(\"You have successfully logged in!\");\n          }else{\n            this.newAlertCall(\"ERROR\", \"Something went wrong!\", \"danger\");\n          }\n        });\n      }else{\n        api.post('/sign',{\"email\" : data.email, \"password\" : data.password}).\n        request().\n        onRequestReponse((data)=>{\n          if(data.session !== \"!\"){\n            var email = data.email;\n            cookies.set(\"session\", data.session);\n            cookies.set(\"user\", email);\n            this.handleClose();\n            this.login(\"You have successfully sign in!\");\n          }else{\n            this.newAlertCall(\"ERROR\", \"User already exists!\", \"danger\");\n          }\n        });\n      }\n    }else{\n      this.newAlertCall(\"WARNING\", \"Email or is not in correct format\", \"warning\");\n    }\n  }\n\n  newAlertCall(messageHead, message, type){\n    this.setState({\n      showAlert :  true,\n      alertMessage : message + \"\\n\" + new Date(),\n      alertMessageHead :  messageHead,\n      alertType : type\n    });\n\n    if(this.timerAlert!== null){\n      clearTimeout(this.timerAlert);\n    }\n    this.timerAlert = setTimeout(()=>{\n      this.alertClose();\n    }, 3000);\n\n  }\n\n  alertClose(){\n    this.setState({\"showAlert\" : false});\n  }\n\n  cardClicked(element){\n    this.activeGame = element;\n    this.setState({\n      mainRender: \"gameInfo\"\n    });\n  }\n\n  startClicked(){\n    this.setState({\n      mainRender: \"home\"\n    });\n  }\n\n  backClicked(){\n    this.setState({\n      mainRender: \"home\"\n    });\n  }\n\n  purchaseClicked(element){\n    this.activeGame = element;\n    this.setState({\n      mainRender: \"purchase\"\n    });\n  }\n\n  accountClicked(){\n    this.setState({\n      mainRender: \"account\"\n    });\n  }\n\n  creditsClicked(){\n    this.setState({\n      mainRender: \"credits\"\n    });\n  }\n\n  itchioClicked(){\n    this.setState({\n      mainRender: \"itchio\"\n    });\n  }\n}\n\nexport default App\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}